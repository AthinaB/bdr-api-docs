swagger: "2.0"
info:
  title: Blood Donor Registry for donors' application
  description: Should add more description?
  version: "0.0.1"
# the domain of the service
host: service.blooddonorregistry.gr
# array of all schemes that your API supports
schemes:
  - https
produces:
  - application/json
  - text/html
consumes:
  - application/json
  - text/plain

paths:
  /locale/{lang}.json:
    get:
      summary: Get i18n json
      description: |
        All the texts that the UI needs to display in key-value pairs.

        No login (token) required.

        Available languages:

        - English : en
        - Greek : el

      operationId: getLocale
      parameters:
      - name: 'lang'
        in: path
        type: string
        required: true
      security: []
      produces:
        - application/json
        - text/html
      responses:
        200:
          description: OK
          schema:
            type: object
        404:
          description: Not found

          schema:
            type: object
          examples:
            text/html: |
              <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
              <html>
                <head><title>404 Not Found</title></head>
                <body>
                  <h1>Not Found</h1>
                  <p>The requested URL /locale/gr.json was not found on this server.</p>
                  <hr>
                  <address>Apache/2.4.10 (Debian) Server at web.test.bdr.grnet.gr Port 443</address>
                </body>
              </html>


  /blood-donor-registry-web-public/rest/authentication/logged-on:
    get:
      summary: Retrieve user data
      description: |
        TBA
        Login required.
      operationId: getUserA
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/UserA"
          examples:
            {
              "acceptedUsageTerms": true,
              "acceptsInfoMaterial": true,
              "bloodDonor": {
                "data": {
                  "ama": "1600791400",
                  "amka": "23038901379",
                  "ast": "Γ",
                  "birthCountry": {
                    "alpha2": "GR",
                    "alpha3": "GRC",
                    "id": "300",
                    "name": {
                      "el": "ΕΛΛΑΔΑ",
                      "en": "GREECE"
                      }
                    },
                   "birthDate": "1989-03-23",
                   "birthRegion": {
                      "id": "11",
                      "name": {
                        "el": "ΒΟΡΕΙΟΥ ΑΙΓΑΙΟΥ",
                        "en": "VOREIOU AIGAIOU"
                      }
                    },
                    "bloodGroup": "A",
                    "city": {
                      "id": "9088",
                      "name": {
                        "el": "ΖΗΡΟΥ",
                        "en": "ZIROU"
                      },
                      "prefecture": {
                        "id": "0404",
                        "name": {
                          "el": "ΠΡΕΒΕΖΑΣ",
                          "en": "PREVEZAS"
                        },
                        "region": {
                          "id": "4",
                          "name": {
                            "el": "ΗΠΕΙΡΟΥ",
                            "en": "IPEIROU"
                          }
                        }
                      }
                    },
                    "education": "LEVEL7",
                    "email": "papadakis@example.com",
                    "fathersName": "ΓΕΩΡΓΙΟΣ",
                    "firstname": "ΙΩΑΝΝΗΣ",
                    "gender": "MALE",
                    "imported": false,
                    "lastname": "ΠΑΠΑΔΑΚΗΣ",
                    "mothersName": "ΙΟΥΛΙΑ",
                    "phoneNumber": "2152157865",
                    "rhesus": "NEGATIVE",
                    "ssnCountry": {
                      "alpha2": "GR",
                      "alpha3": "GRC",
                      "id": "300",
                      "name": {
                        "el": "ΕΛΛΑΔΑ",
                        "en": "GREECE"
                      }
                    },
                  "street": "ΓΚΑΝΤΕΜΗ",
                  "streetNumber": "13"
                },
                "deleted": false,
                "duplicate": false,
                "id": 87588,
                "idikaVerified": true
              },
              "email": "papadakis@example.com",
              "emailValid": true,
              "id": 8616993,
              "registrationDate": "2016-06-23T13:03:47.308+0000",
              "registrationId": "CnEi7MuQBBnnaggqfiPBuImTjJLXpwFTcU6nKIJN4yc",
              "status": "ACTIVE",
              "userType": "BloodDonorUser",
              "username": "papadakis",
              "version": 4
            }

  /blood-donor-registry-web-public/rest/blooddonor/{id}:
    get:
      summary: TBA
      description: Retrieve user data
      operationId: getUserB
      parameters:
      - name: 'id'
        in: path
        type: string
        required: true
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserB"
          examples:
            {
              "bloodDonor":{
                "id":87588,
                "city":{
                  "prefecture":{
                    "id":"0404",
                    "name":"ΠΡΕΒΕΖΑΣ",
                    "region":{
                      "id":"4",
                      "name":"ΗΠΕΙΡΟΥ"
                    }
                  },
                  "id":"9088",
                  "name":"ΖΗΡΟΥ"
                },
                "verification":{
                  "ama":false,
                  "adt":false,
                  "ast":false,
                  "adb":false,
                  "amka":false,
                  "aad":false,
                  "aat":false,
                  "aap":false,
                  "firstname":false,
                  "lastname":false,
                  "fathersName":false,
                  "mothersName":false,
                  "birthDate":false
                },
                "birthCountry":{
                  "id":"300",
                  "alpha2":"GR",
                  "alpha3":"GRC",
                  "name":"ΕΛΛΑΔΑ"
                },
                "birthRegion":{
                  "id":"11",
                  "name":"ΒΟΡΕΙΟΥ ΑΙΓΑΙΟΥ"
                },
                "discardedOnce":false,
                "recentVisit":false,
                "idikaVerified":true,
                "ssnCountry":{
                  "id":"300",
                  "alpha2":"GR",
                  "alpha3":"GRC",
                  "name":"ΕΛΛΑΔΑ"
                },
                "firstname":"ΙΩΑΝΝΗΣ",
                "lastname":"ΠΑΠΑΔΑΚΗΣ",
                "ast":"Γ",
                "education":"LEVEL7",
                "street":"ΜΕΣΟΓΕΙΩΝ",
                "streetNumber":"13",
                "phoneNumber":"2152157865",
                "email":"papadakis@example.com",
                "ama":"1600791400",
                "bloodGroup":"A",
                "rhesus":"NEGATIVE",
                "fathersName":"ΓΕΩΡΓΙΟΣ",
                "mothersName":"ΙΟΥΛΙΑ",
                "amka":"23038901379",
                "gender":"MALE",
                "birthDate":"1989-03-23"
              },
              "id":8616993,
              "username":"papadakis",
              "email": "papadakis@example.com",
              "status":"ACTIVE",
              "userType":"BloodDonorUser",
              "emailValid":true,
              "registrationDate":"2016-06-23T13:03:47.308+0000",
              "registrationId":"CnEi7MuQBBnnaggqfiPBuImTjJLXpwFTcU6nKIJN4yc"
            }
        401:
          description: |
            Unauthorized.

            When the ID is valid but the logged in user has no permission to get its data.
          schema:
            $ref: "#/definitions/ErrorMsg"
          examples:
            application/json:
              { error: "Not Allowed" }
        404:
          description: |
            Not found.

            When there is no blood donor with the current ID or no ID has been sent.
          schema:
            $ref: "#/definitions/ErrorMsg"
          examples:
            application/json:
              { error: "Not Found" }

  /blood-donor-registry-web-public/rest/blooddonor/{id}/request:
    get:
      summary: TBA
      description: Retrieve user request
      operationId: getDonorRequest
      parameters:
      - name: 'id'
        in: path
        type: string
        required: true
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]

      responses:
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorMsg"
          examples:
            application/json:
              { error: "Not Found" }

  /blood-donor-registry-web-public/rest/blooddonor/region/countries:
    get:
      summary:
        Get id, name and codes of all countries.

      description: |
        The name of the country is in the language that the request mentions.

        The code of each country comes in 2 forms:

        - ISO 3166-1 alpha-2
        - ISO 3166-1 alpha-3

      operationId: getCountries
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]
      parameters:
      - name: 'X-Lang'
        in: header
        type: string
        required: true
        description: |
          Possible values: en, el

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/CountrySingleLanguage"
          examples:
            application/json:
              [
                {
                  "alpha2":"AF",
                  "alpha3":"AFG",
                  "id":"4",
                  "name":"AFGHANISTAN"
                },
                {
                  "id":"8",
                  "alpha2":"AL",
                  "alpha3":"ALB",
                  "name":"ALBANIA"
                }
              ]

  /blood-donor-registry-web-public/rest/blooddonor/region/regions:
    get:
      summary:
        Get id and name of all greek regions.

      description: The name of the region is in the language that the request mentions.
      operationId: getRegions
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]
      parameters:
      - name: 'X-Lang'
        in: header
        type: string
        required: true
        description: |
          Possible values: en, el
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RegionSingleLanguage"
          examples:
            application/json:
              [
                {
                  "id":"1",
                  "name":"AN. MAKEDONIAS & THRAKIS"
                },
                {
                  "id":"2",
                  "name":"KENTRIKIS MAKEDONIAS"
                }
              ]

  /blood-donor-registry-web-public/rest/blooddonor/region/cities/{regionID}:
    get:
      summary: Get the cities of a greek region


      description: Get a list with information about the cities of a region in the requested language.
      operationId: getCities
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      security:
        - token: [ ]
      parameters:
      - name: regionID
        in: path
        type: string
        required: true
      - name: 'X-Lang'
        in: header
        type: string
        required: true
        description: |
          Possible values: en, el
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/CitySingleLanguage"
          examples:
            application/json:
              [
                {
                  "prefecture": {
                    "id":"0401",
                    "name":"ARTAS",
                    "region": {
                      "id":"4",
                      "name":"IPEIROU"
                    }
                  },
                  "id":"9073",
                  "name":"ARTAION"
                }
              ]

securityDefinitions:
  token:
    type: apiKey
    in: header
    name: X-Auth-Token


definitions:

  ErrorMsg:
    type: object
    properties:
      error:
        type: string

  CityMultiLanguage:
    type: object
    properties:
      id:
        type: integer
      name:
        $ref: "#/definitions/MultiLanguage"
      prefecture:
        type: object
        properties:
          id:
            type: integer
          name:
            $ref: "#/definitions/MultiLanguage"
          region:
            $ref: "#/definitions/RegionMultiLanguage"

  CitySingleLanguage:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      prefecture:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          region:
            $ref: "#/definitions/RegionSingleLanguage"

  CountryMultiLanguage:
    type: object
    properties:
      id:
        type: integer
      alpha2:
        type: string
      alpha3:
        type: string
      name:
        $ref: "#/definitions/MultiLanguage"

  CountrySingleLanguage:
    type: object
    properties:
      id:
        type: integer
      alpha2:
        type: string
      alpha3:
        type: string
      name:
        type: string

  RegionMultiLanguage:
    type: object
    properties:
      id:
        type: integer
      name:
        $ref: "#/definitions/MultiLanguage"

  RegionSingleLanguage:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

  MultiLanguage:
    type: object
    properties:
      el:
        type: string
      en:
        type: string

  UserA:
    type: object
    properties:
      acceptedUsageTerms:
        type: boolean
      acceptsInfoMaterial:
        type: boolean
      bloodDonor:
        type: object
        properties:
          data:
            type: object
            properties:
              ama:
                type: integer
              amka:
                type: integer
              ast:
                type: string
              birthCountry:
                $ref: "#/definitions/CountryMultiLanguage"
              birthDate:
                type: string
                format: date
              birthRegion:
                $ref: "#/definitions/RegionMultiLanguage"
              bloodGroup:
                type: string
              city:
                $ref: "#/definitions/CityMultiLanguage"
              education:
                type: string
              email:
                type: string
              fathersName:
                type: string
              firstname:
                type: string
              gender:
                type: string
              imported:
                type: boolean
              lastname:
                type: string
              mothersName:
                type: string
              phoneNumber:
                type: integer
              rhesus:
                type: string
              ssnCountry:
                $ref: "#/definitions/CountryMultiLanguage"
              street:
                type: string
              streetNumber:
                type: integer
          deleted:
            type: boolean
          duplicate:
            type: boolean
          id:
            type: integer
          idikaVerified:
            type: boolean
      email:
        type: string
      emailValid:
        type: boolean
      id:
        type: integer
      registrationDate:
        type: string
        format: date-time
      registrationId:
        type: string
      status:
        type: string
      userType:
        type: string
      username:
        type: string
      version:
        type: integer

  UserB:
    type: object
    properties:
      bloodDonor:
        type: object
        properties:
          ama:
            type: integer
          amka:
            type: integer
          ast:
            type: string
          birthCountry:
            $ref: "#/definitions/CountrySingleLanguage"
          birthDate:
            type: string
            format: date
          birthRegion:
            $ref: "#/definitions/RegionSingleLanguage"
          bloodGroup:
            type: string
          city:
            $ref: "#/definitions/CitySingleLanguage"
          discardedOnce:
            type: boolean
          education:
            type: string
          email:
            type: string
          fathersName:
            type: string
          firstname:
            type: string
          gender:
            type: string
          id:
            type: integer
          idikaVerified:
            type: boolean
          lastname:
            type: string
          mothersName:
            type: string
          phoneNumber:
            type: integer
          recentVisit:
            type: boolean
          rhesus:
            type: string
          ssnCountry:
            $ref: "#/definitions/CountrySingleLanguage"
          street:
            type: string
          streetNumber:
            type: integer
          verification:
            type: object
            properties:
              aad:
                type: boolean
              aap:
                type: boolean
              aat:
                type: boolean
              adb:
                type: boolean
              adt:
                type: boolean
              ama:
                type: boolean
              amka:
                type: boolean
              ast:
                type: boolean
              birthDate:
                type: boolean
              fathersName:
                type: boolean
              firstname:
                type: boolean
              lastname:
                type: boolean
              mothersName:
                type: boolean
      email:
        type: string
      emailValid:
        type: boolean
      id:
        type: integer
      registrationDate:
        type: string
        format: date-time
      registrationId:
        type: string
      status:
        type: string
      userType:
        type: string
      username:
        type: string
